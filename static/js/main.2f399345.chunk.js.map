{"version":3,"sources":["Components/Tools/index.js","Components/Snippet/index.js","Components/Embed/index.js","Components/Tagging/index.js","App.js","serviceWorker.js","index.js"],"names":["Adobe","react_default","a","createElement","href","target","Google","Tools","Tools_Adobe","Tools_Google","Component","Snippet","_ref","code","className","Embed","stagingCode","productionCode","replace","Components_Snippet","Tagging","NavComponent","Navbar","bg","variant","fixed","Brand","Nav","Link","NavDropdown","title","id","Item","Divider","rel","SectionComponent","ID","comp","Row","Col","sm","App","Container","App_NavComponent","App_SectionComponent","Components_Tools","Components_Embed","Components_Tagging","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f399345.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst Adobe = () => (\n  <div>\n    <h3>Adobe Analytics/Adobe Launch</h3>\n    <p>\n      Quicken Loans runs a web analytics stack centered around{\" \"}\n      <a href=\"//www.adobe.com/experience-platform/launch.html\" target=\"_blank\">\n        Adobe Launch\n      </a>{\" \"}\n      (formerly DTM) for data collection and{\" \"}\n      <a\n        href=\"https://www.adobe.com/analytics/adobe-analytics.html\"\n        target=\"_blank\"\n      >\n        Adobe Analytics\n      </a>{\" \"}\n      for reporting.\n    </p>\n    <p>\n      <b>Launch</b> has two primary functions:\n    </p>\n    <ul>\n      <li>\n        Collect data from a website and send it to <b>Adobe Analytics</b>.\n      </li>\n      <li>\n        Load vendor code or other code unrelated to the core application.\n        Examples include Facebook marketing code and the Live Engage Chat\n        library. This process is referred to as <b>tag management</b>.\n      </li>\n    </ul>\n    <p>\n      Please note that the collection of web analytics is <b>not</b> automatic\n      and must be configured on a per property basis. Typically, <b>Launch</b>{\" \"}\n      properties (collections of analytics rules) are segmented by codebase,\n      rather than domain. The data collected by a property is determined by its\n      various stakeholders.\n    </p>\n  </div>\n);\n\nconst Google = () => (\n  <div>\n    <h3>Google Analytics</h3>\n    <p>Here is some content about how we use google analytics</p>\n  </div>\n);\n\nclass Tools extends Component {\n  render() {\n    return (\n      <div>\n        <Adobe />\n        <Google />\n      </div>\n    );\n  }\n}\n\nexport default Tools;\n","import React from \"react\";\n\nconst Snippet = ({ code }) => (\n  <div className=\"card\">\n    <div className=\"card-body\">\n      <pre>\n        <code>{code}</code>\n      </pre>\n    </div>\n  </div>\n);\n\nexport default Snippet;\n","import React, { Component } from \"react\";\nimport Snippet from \"../Snippet\";\n\nclass Embed extends Component {\n  render() {\n    const stagingCode = `<script src=\"//assets.adobedtm.com/launch-ENc379233258344e5ab0033464ce7e8d21-staging.min.js\"></script>;`;\n    const productionCode = stagingCode.replace(\"-staging\", \"\");\n    return (\n      <div>\n        <h3>Embedding Launch</h3>\n        <p>\n          The Launch javascript snippet loads the Launch library on a page load.\n          The script should be loaded in the global head as high as possible.\n          Each page requires one script, but the scripts differs based on\n          environment: there is one for the <b>production environment</b>, and\n          one for <b>all non-production environments.</b> It is recommended that\n          you load the library asychronously.\n        </p>\n        <h4 className=\"push\">Non-Production</h4>\n        <p>\n          This is an <b>EXAMPLE</b> of a Launch script to be placed in{\" \"}\n          <b>non-production</b> environments. Note the async attribute and\n          \"-staging\" flag in the file.\n        </p>\n        <Snippet code={stagingCode} />\n        <h4 className=\"push\">Production</h4>\n        <p>\n          This is an <b>EXAMPLE</b> of a Launch script to be placed in a{\" \"}\n          <b>production</b> environment. Note the async attribute and{\" \"}\n          <b>lack of</b> \"-staging\" flag in the file.\n        </p>\n        <Snippet code={productionCode} />\n      </div>\n    );\n  }\n}\n\nexport default Embed;\n","import React, { Component } from \"react\";\nimport Snippet from \"../Snippet\";\n\nclass Tagging extends Component {\n  render() {\n    const taggedButton = `<button data-analytics-click=\"rocket:purchase calculator:calculate\">Calculate</button>`;\n    return (\n      <div>\n        <h3>Click Tracking</h3>\n        <p>\n          There are two ways that clicks are tracked in Launch, explicity\n          through attribute \"tagging\" and automatically through a process called\n          \"Activity Map\".\n        </p>\n        <h4>Explicit click tracking with Attribute tagging</h4>\n        <p className=\"push\">\n          Placing the attribute{\" \"}\n          <code>data-analytics-click=\"channel:product:link text\"</code> on an\n          element will instruct Launch to track clicks on that element and\n          record the value of the <code>data-analytics-click</code> attribute.\n          Primary buttons (and buttons that execute a non-navigation action)\n          should contain a click tracking tag.{\" \"}\n          <code>Channel:product:link text</code> is a generic guideline for the\n          value. For example, if the primary button below runs a calculation on\n          a purchase calculator on a Rocket Mortgage Page:\n        </p>\n        <Snippet code={taggedButton} />\n        <h4 className=\"push\">Automatic click tracking with Activity Map</h4>\n        <p>\n          Launch will automatically track clicks on certain elements through a\n          process called Activity Map. This is how all other clicks (i.e. those\n          that are not tagged) will be collected and sent to reporting. Launch\n          will record an Activity Map click events on elements that meet any of\n          the following criteria:\n        </p>\n        <ul>\n          <li>Anchor or Area element with an href attribute</li>\n          <li>Input element with a value attribute or child text</li>\n          <li>Button elements</li>\n          <li>\n            Any element with an onClick function that sets an s_objectID\n            variable (Used if element needs to be tracked by activity map, but\n            does not meet any criteria above, Uncommon)\n          </li>\n        </ul>\n        <p>\n          <strong>Note:</strong> Button elements with the attribute\n          <code>type=\"button\"</code> will NOT be tracked by Activity Map. To\n          track clicks on these elements you can replace{\" \"}\n          <code>type=\"button\"</code> with <code>role=\"button\"</code> or{\" \"}\n          <code>submit=\"button\"</code>.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Tagging;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { Container, Row, Col, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport Tools from \"./Components/Tools\";\nimport Embed from \"./Components/Embed\";\nimport Tagging from \"./Components/Tagging\";\nimport \"./App.scss\";\n\nconst NavComponent = () => (\n  <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n    <Navbar.Brand href=\"/\">Web Analytics Standards</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"#overview\">Overview</Nav.Link>\n      <NavDropdown title=\"Launch\" id=\"launch-nav-dropdown\">\n        <NavDropdown.Item href=\"#embed\">Embedding</NavDropdown.Item>\n        <NavDropdown.Item href=\"#tagging\">Click Tracking</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item\n          href=\"//docs.adobelaunch.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Documentation\n        </NavDropdown.Item>\n      </NavDropdown>\n      <Nav.Link href=\"#datalayer\">Data Layer</Nav.Link>\n    </Nav>\n  </Navbar>\n);\n\nconst SectionComponent = ({ ID, comp }) => (\n  <div id={ID} className=\"push-lg push-bottom\">\n    <Row>\n      <Col sm={12}>{comp}</Col>\n    </Row>\n  </div>\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <NavComponent />\n          <SectionComponent ID=\"overview\" comp={<Tools />} />\n          <hr />\n          <SectionComponent ID=\"embed\" comp={<Embed />} />\n          <hr />\n          <SectionComponent ID=\"tagging\" comp={<Tagging />} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}